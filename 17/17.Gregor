def ggTFrac(a,b):
    a = abs(a)
    b = abs(b)
    while b != 0:
        a,b = b,a % b
    return a

def kuerze(a):
    g = ggTFrac(a[0],a[1])
    return (a[0]//g,a[1]//g)
    
def addFrac(a,b):
    c = (a[0]*b[1]+a[1]*b[0],a[1]*b[1])
    return kuerze(c)

def subFrac(a,b):
    c = (a[0]*b[1]-a[1]*b[0],a[1]*b[1])
    return kuerze(c)

def mulFrac(a,b):
    c = (a[0]*b[0],a[1]*b[1])
    return kuerze(c)

def divFrac(a,b):
    c = (a[0]*b[1],a[1]*b[0])
    return kuerze(c)

def changeMinus(polIn):
    polOut = []
    for i in polIn:
        if i[0]<0 and i[1]>0:
            a = (-i[0],-i[1])
            polOut.append(a)
        else:
            polOut.append(i)
    return polOut

def dif(pol):
    polOut = []
    for i in range(1,len(pol)):
        a = (pol[i][0]*i,pol[i][1])
        polOut.append(kuerze(a))
    return changeMinus(polOut)

def add(pol1,pol2):
    polOut = []
    if len(pol1) < len(pol2):
        for i in range(len(pol1)):
            a = addFrac(pol1[i], pol2[i])
            polOut.append(a)
        for j in range(len(pol1),len(pol2)):
            polOut.append(kuerze(pol2[j]))
    else:
        for i in range(len(pol2)):
            a = addFrac(pol1[i], pol2[i])
            polOut.append(a)
        for j in range(len(pol2),len(pol1)):
            polOut.append(kuerze(pol1[j]))
    return changeMinus(polOut)

def sub(pol1,pol2):
    polOut = []
    if len(pol1) < len(pol2):
        for i in range(len(pol1)):
            a = subFrac(pol1[i], pol2[i])
            polOut.append(a)
        for j in range(len(pol1),len(pol2)):
            polOut.append(kuerze(pol2[j]))
    else:
        for i in range(len(pol2)):
            a = subFrac(pol1[i], pol2[i])
            polOut.append(a)
        for j in range(len(pol2),len(pol1)):
            polOut.append(kuerze(pol1[j]))
    for k in range(len(polOut)-1,-1,-1):
        if polOut[k][0] == 0:
            polOut.pop()
        else:
            break
    return changeMinus(polOut)

def mul(pol1,pol2):
    polOut = []
    for i in range(len(pol1)+len(pol2)-1):
        polOut.append((0*i,1))
    for j in range(len(pol1)):
        for k in range(len(pol2)):
            polOut[j+k] = addFrac(mulFrac(pol1[j], pol2[k]),polOut[j+k])
    return polOut

def div(pol1,pol2):
    
    return

def ggt(pol1,pol2):
    
    return


f = [(0,1),(2,1)]
g = [(0,1),(2,1)]

print(dif(f))
print(add(f, g))
print(sub(f, g))
print(mul(f, g))
print(div(f, g))
print(ggt(f, g))

print("")
f = [(0,1),(2,1)]
g = [(2,1)]

print(dif(f))
print(add(f, g))
print(sub(f, g))
print(mul(f, g))
print(div(f, g))
print(ggt(f, g))

print("")
f=[(4,7),(0,1),(5,5),(-9,6),(2,3)]
g=[(6,5),(-7,2),(-8,1)]

print(dif(f))
print(add(f, g))
print(sub(f, g))
print(mul(f, g))
print(div(f, g))
print(ggt(f, g))
