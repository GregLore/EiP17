import random

# Größe des Spielfeldes
n = 10
# Spielfeld
feld = [[-1 for x in range(n)] for y in range(n)]
# Schiffslängen
sl = [5, 4, 4, 3, 3, 3, 2, 2, 2, 2]
# maximale Anzahl von Platzierungsversuchen für ein Schiff
anzahl_platzierungsversuche = 10

overlap = True

while overlap:
    # Wir entfernen alle bisher gesetzten Schiffe.
    for y in range(0, n):
        for x in range(0, n):
            feld[y][x] = -1 # leeres Feld

    overlap = False

    for i in range(0, len(sl)):
        for k in range(0, anzahl_platzierungsversuche):
            # Wähle zufällige Orientierung des i-ten Schiffes
            orientation = random.randint(0, 1)

            # (x0,y0) ist die linke obere Ecke des zu platzierenden Schiffes
            # Alle Felder, die das Schiff belegt und alle Felder, die das Schiff berühren
            # sind gegeben durch [x1,x2] x [y1,y2].
            if orientation == 0: # horizontal
                x0 = random.randint(0, n - sl[i])
                y0 = random.randint(0, n - 1)
                x2 = min(n - 1, x0 + sl[i] + 1)
                y2 = min(n - 1, y0 + 1)
            else: # vertikal
                x0 = random.randint(0, n - 1)
                y0 = random.randint(0, n - sl[i])
                x2 = min(n - 1, x0 + 1)
                y2 = min(n - 1, y0 + sl[i] + 1)

            x1 = max(0, x0 - 1)
            y1 = max(0, y0 - 1)

            # Nachbarschaft [x1,x2] x [y1,y2] des Schiffes muss frei sein!

            overlap_i = False
            for y in range(y1, y2 + 1):
                for x in range(x1, x2 + 1):
                    if feld[y][x] >= 0:
                        overlap_i = True
                        break
                if overlap_i:
                    break

            if overlap_i: # Der aktuelle Platzierungsversuch für das i-te Schiff ist gescheitert.
                # Wir versuchen das i-te Schiff erneut zu platzieren.
                continue

            # Wir haben Freiraum für das i-te Schiff und seine unmittelbare Umgebung gefunden.
            if orientation == 0:
                # Wir platzieren das i-te Schiff horizontal mit der linken oberen Ecke (x0,y0)
                for x in range(x0, x0 + sl[i]):
                    if feld[y0][x] < 0:
                        feld[y0][x] = i
            else:
                # Wir platzieren das i-te Schiff vertikal mit der linken oberen Ecke (x0,y0)
                for y in range(y0, y0 + sl[i]):
                    if feld[y][x0] < 0:
                        feld[y][x0] = i
            # Für das i-te Schiff benötigen wir keine weiteren Platzierungsversuche.
            break
        else: # Alle Platzierungsversuche sind gescheitert, das i-te Schiff zu platzieren.
            # Wir beginnen ganz von vorne.
            overlap = True
            break

zeile = 'ABCDEFGHIJ'

'''
print('    1 2 3 4 5 6 7 8 9 10')
print()
for y in range(0, n):
    print(zeile[y], end='   ')
    for x in range(0, n):
        if feld[y][x] < 0:
            print('.', end=' ')
        else:
            print(feld[y][x], end=' ')
    print()
'''

sunkCount = 10
GameOver = False
while not GameOver:
    userIn = str(input("xy="))
    if userIn == "exit":
        GameOver = True
        break
    for u in userIn:
        try:
            int(u)
            xu = int(u)-1
            if xu == -1:
                xu = 9
        except ValueError:
            yu = ord(u)-97
    if feld[yu][xu] >= 0:
        print("Treffer!")
        sl[feld[yu][xu]] -= 1
        if sl[feld[yu][xu]] == 0:
            print("Versenkt!")
            sunkCount -= 1
            print(sunkCount, "Schiffe verbleibend.")
        feld[yu][xu] = -10 -feld[yu][xu]
    elif feld[yu][xu] == -1:
        print("Wasser...")
        feld[yu][xu] = -2
    else:
        print("Schon gwaehlt.")
    if sunkCount == 0:
        print("Gewonnen!")
        GameOver = True

    print('    1 2 3 4 5 6 7 8 9 10')
    print()
    for y in range(0, n):
        print(zeile[y], end='   ')
        for x in range(0, n):
            if feld[y][x] >= -1:
                print('.', end=' ')
            elif feld[y][x] == -2:
                print('w', end=' ')
            else:
                print("X", end=' ')
        print()
